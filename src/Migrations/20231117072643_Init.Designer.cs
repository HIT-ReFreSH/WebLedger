// <auto-generated />
using System;
using HitReFreSH.WebLedger.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HitReFreSH.WebLedger.Migrations
{
    [DbContext(typeof(LedgerContext))]
    [Migration("20231117072643_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HitReFreSH.WebLedger.Data.LedgerAccess", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Name");

                    b.ToTable("Access");
                });

            modelBuilder.Entity("HitReFreSH.WebLedger.Data.LedgerConfig", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Key");

                    b.ToTable("Configs");
                });

            modelBuilder.Entity("HitReFreSH.WebLedger.Data.LedgerEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("GivenTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsIncome")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryName");

                    b.HasIndex("TypeName");

                    b.ToTable("LedgerEntries");
                });

            modelBuilder.Entity("HitReFreSH.WebLedger.Data.LedgerEntryCategory", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("SuperCategoryName")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Name");

                    b.HasIndex("SuperCategoryName");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("HitReFreSH.WebLedger.Data.LedgerEntryType", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("DefaultCategoryName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("DefaultIsIncome")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Name");

                    b.HasIndex("DefaultCategoryName");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("HitReFreSH.WebLedger.Data.LedgerView", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Name");

                    b.HasIndex("TemplateName");

                    b.ToTable("Views");
                });

            modelBuilder.Entity("HitReFreSH.WebLedger.Data.LedgerViewAutomation", b =>
                {
                    b.Property<string>("TemplateName")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("TemplateName", "Type");

                    b.ToTable("ViewAutomation");
                });

            modelBuilder.Entity("HitReFreSH.WebLedger.Data.LedgerViewTemplate", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("varchar(4096)");

                    b.Property<bool>("IsIncome")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Name");

                    b.ToTable("ViewTemplates");
                });

            modelBuilder.Entity("HitReFreSH.WebLedger.Data.LedgerEntry", b =>
                {
                    b.HasOne("HitReFreSH.WebLedger.Data.LedgerEntryCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HitReFreSH.WebLedger.Data.LedgerEntryType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("HitReFreSH.WebLedger.Data.LedgerEntryCategory", b =>
                {
                    b.HasOne("HitReFreSH.WebLedger.Data.LedgerEntryCategory", "SuperCategory")
                        .WithMany()
                        .HasForeignKey("SuperCategoryName");

                    b.Navigation("SuperCategory");
                });

            modelBuilder.Entity("HitReFreSH.WebLedger.Data.LedgerEntryType", b =>
                {
                    b.HasOne("HitReFreSH.WebLedger.Data.LedgerEntryCategory", "DefaultCategory")
                        .WithMany()
                        .HasForeignKey("DefaultCategoryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefaultCategory");
                });

            modelBuilder.Entity("HitReFreSH.WebLedger.Data.LedgerView", b =>
                {
                    b.HasOne("HitReFreSH.WebLedger.Data.LedgerViewTemplate", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Template");
                });

            modelBuilder.Entity("HitReFreSH.WebLedger.Data.LedgerViewAutomation", b =>
                {
                    b.HasOne("HitReFreSH.WebLedger.Data.LedgerViewTemplate", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Template");
                });
#pragma warning restore 612, 618
        }
    }
}
